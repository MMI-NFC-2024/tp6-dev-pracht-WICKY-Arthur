---
import penguins from "../../assets/penguins.json";
import PlotFigure from "../../components/PlotFigure.astro";
import * as Plot from "@observablehq/plot";
import Layout from "../../layouts/Layout.astro";
import Menu from "../../components/Menu.astro";
export const prerender = false;
// Récupérer le paramètre d'espèce depuis l'URL avec Astro.params
const { species } = Astro.params;

// Convertir le paramètre pour correspondre aux données (première lettre en majuscule)
const formattedSpecies = species
    ? species.charAt(0).toUpperCase() + species.slice(1).toLowerCase()
    : "";

// Filtrer les données pour n'obtenir que les pingouins de l'espèce spécifiée
const filteredPenguins = penguins.filter(
    (p) => p.species.toLowerCase() === species?.toLowerCase(),
);

// Vérifier si l'espèce existe
const speciesExists = filteredPenguins.length > 0;
---

<Layout title={`Pingouins ${formattedSpecies}`}>
    <Menu />
    <main class="max-w-7xl mx-auto px-4 py-8">
        {
            speciesExists ? (
                <div>
                    <div class="mb-8 flex items-center">
                        <a
                            href="/rendu-dynamique"
                            class="text-blue-500 hover:text-blue-700 mr-4"
                        >
                            &larr; Retour à la liste
                        </a>
                        <h1 class="text-3xl font-bold">
                            Pingouins {formattedSpecies}
                        </h1>
                    </div>

                    <div class="bg-white p-6 rounded-lg shadow-md mb-8">
                        <h2 class="text-xl font-semibold mb-4">
                            Graphique de l'espèce
                        </h2>
                        <PlotFigure
                            options={{
                                width: 800,
                                height: 500,
                                margin: 40,
                                grid: true,
                                marks: [
                                    Plot.dot(filteredPenguins, {
                                        x: "culmen_length_mm",
                                        y: "culmen_depth_mm",
                                        r: "body_mass_g",
                                        fill: "sex",
                                        stroke: "black",
                                        strokeWidth: 0.5,
                                        opacity: 0.7,
                                        title: (d) =>
                                            `${d.sex || "Inconnu"}\nMasse: ${d.body_mass_g || "?"}g\nÎle: ${d.island}`,
                                    }),
                                    Plot.frame(),
                                ],
                                x: {
                                    label: "Longueur du bec (mm)",
                                    grid: true,
                                },
                                y: {
                                    label: "Profondeur du bec (mm)",
                                    grid: true,
                                },
                                style: {
                                    fontSize: 14,
                                },
                                color: {
                                    legend: true,
                                },
                            }}
                        />
                    </div>

                    <div class="bg-white p-6 rounded-lg shadow-md">
                        <h2 class="text-xl font-semibold mb-4">
                            Distribution par île
                        </h2>
                        <PlotFigure
                            options={{
                                width: 800,
                                height: 400,
                                margin: 40,
                                grid: true,
                                marks: [
                                    Plot.barY(
                                        filteredPenguins,
                                        Plot.groupX(
                                            { y: "count" },
                                            {
                                                x: "island",
                                                fill: "island",
                                                sort: { x: "y", reverse: true },
                                            },
                                        ),
                                    ),
                                    Plot.ruleY([0]),
                                ],
                                style: {
                                    fontSize: 14,
                                },
                            }}
                        />
                    </div>
                </div>
            ) : (
                <div class="text-center py-12">
                    <h1 class="text-2xl font-bold text-red-500 mb-4">
                        Espèce non trouvée
                    </h1>
                    <p class="mb-6">
                        L'espèce de pingouin "{species}" n'existe pas dans notre
                        base de données.
                    </p>
                    <a
                        href="/rendu-dynamique"
                        class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded transition-colors"
                    >
                        Retour à la liste des espèces
                    </a>
                </div>
            )
        }
    </main>
</Layout>
